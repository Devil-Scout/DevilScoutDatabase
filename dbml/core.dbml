Table profiles {
  user_id uuid [not null]
  created_at timestamptz [not null]
  name text [not null, default: '']

  indexes {
    user_id [pk]
  }

  Note: 'A user of the platform'
}

Table teams {
  number smallint [not null]
  verified boolean [not null, default: false]
  created_at timestamptz [not null, default: `now()`]
  name text [not null]

  indexes {
    number [pk]
    // number::text (gin, pg_trgm)
    // name (gin, pg_trgm)
  }

  Note: 'A team utilizing the platform'
}
Ref: teams.number > frc_teams.number [delete: restrict]

Table team_users {
  user_id uuid [not null]
  team_num smallint [not null] // default: get_team_num()
  added_at timestamptz [not null, default: `now()`]
  added_by uuid [default: `auth.uid()`]

  indexes {
    user_id [pk]
    (team_num, user_id) [unique]
    (team_num, added_at)
    added_by
  }

  Note: 'A user\'s association with a team'
}
Ref: team_users.user_id > profiles.user_id [delete: cascade]
Ref: team_users.team_num > teams.number [delete: cascade]
Ref: team_users.added_by > profiles.user_id [delete: set null]

Table team_requests {
  user_id uuid [not null, default: `auth.uid()`]
  requested_at timestamptz [not null, default: `now()`]
  team_num smallint [not null]

  indexes {
    user_id [pk]
    (team_num, requested_at)
  }

  Note: 'A user\'s request to join a team'
}
Ref: team_requests.user_id > profiles.user_id [delete: cascade]
Ref: team_requests.team_num > teams.number [delete: cascade]

Enum permission_type {
  "scout.match"
  "scout.pit"
  "scout.drive_team"
  "team.manage"
  "team.admin"
}

Table permissions {
  user_id uuid [not null]
  team_num smallint [not null] // default: get_team_num()
  granted_at timestamptz [not null, default: `now()`]
  granted_by uuid [default: `auth.uid()`]
  type permission_type [not null]

  indexes {
    (user_id, type) [pk]
    (team_num, type)
    (team_num, user_id) // for fk
    (team_num, granted_by) // for fk
  }

  Note: 'A user\'s permission'
}
Ref: permissions.(team_num, user_id) > team_users.(team_num, user_id) [delete: cascade]
Ref: permissions.(team_num, granted_by) > team_users.(team_num, user_id) [delete: cascade]
