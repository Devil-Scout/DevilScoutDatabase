// Hidden from clients
Table sync.etags {
  key text [not null]
  value text [not null]
  modified_at timestamptz [not null]

  indexes {
    key [pk] // patch: include value
  }

  Note: 'A TBA ETag to reduce network traffic'
}

// Manually populated
Table frc_seasons {
  year smallint [not null]
  name text [not null]

  indexes {
    year [pk]
  }

  Note: 'A competition season with a unique game'
}

Table frc_districts {
  key citext [not null]
  season smallint [not null]
  code citext [not null]
  name text [not null]

  indexes {
    key [pk]
    (season, code) [unique]
  }

  Note: 'A district designation for a particular season'
}
Ref: frc_districts.season > frc_seasons.year [delete: cascade]

// Manually populated
Table frc_event_types {
  id smallint [not null]
  is_district boolean [not null]
  is_championship boolean [not null]
  is_division boolean [not null]
  is_offseason boolean [not null]
  name text [not null]
  name_short text [not null]

  indexes {
    id [pk]
  }

  Note: 'A type of competition event'
}

Table frc_events {
  key citext [not null]

  name text [not null]
  name_short text

  season smallint [not null]
  code citext [not null]
  district_key citext
  type smallint // -1 -> NULL
  // worth including playoff type?

  start_date date [not null]
  end_date date [not null]
  timezone text
  week smallint

  website text

  location text
  address text
  city text
  province text
  country text
  postal_code citext
  coordinates point

  indexes {
    key [pk]
    (season, code) [unique]
    (season, type)
    (season, name)
    (season, country, province)
    (season, start_date, end_date)
    district_key // for fk
    type // for fk
    // coordinates (type: gist)
  }

  Note: 'An event or competition'
}
Ref: frc_events.season > frc_seasons.year [delete: restrict]
Ref: frc_events.type > frc_event_types.id [delete: restrict]
Ref: frc_events.district_key > frc_districts.key [delete: set null]

Table frc_teams {
  number smallint [not null]
  name text [not null]
  rookie_season smallint
  website text

  city text
  province text
  country text
  postal_code text
  coordinates point

  indexes {
    number [pk]
    name // patch: include number
    rookie_season // patch: include number
    (country, province, city)
  }

  Note: 'A team competing in a particular season'
}
Ref: frc_teams.rookie_season > frc_seasons.year [delete: restrict]

Table frc_event_teams {
  event_key citext [not null]
  team_num smallint [not null]

  indexes {
    (event_key, team_num) [pk]
    (team_num, event_key) [unique] // filter by season using LIKE
  }

  Note: 'A team competing in an event'
}
Ref: frc_event_teams.event_key > frc_events.key [delete: cascade]
Ref: frc_event_teams.team_num > frc_teams.number [delete: cascade]

// Manually populated
Table frc_match_levels {
  id citext [not null]
  name citext [not null]

  indexes {
    id [pk]
    name [unique]
  }

  Note: 'A level of competition for matches'
}

Table frc_matches {
  key citext [not null]
  event_key citext [not null]
  level citext [not null]
  set smallint [not null]
  number smallint [not null]

  scheduled_time timestamptz
  predicted_time timestamptz
  actual_time timestamptz

  indexes {
    key [pk]
    (event_key, level, set, number) [unique]
    level
  }

  Note: 'A match at an event'
}
Ref: frc_matches.event_key > frc_events.key [delete: cascade]
Ref: frc_matches.level > frc_match_levels.id [delete: restrict]

Enum frc_alliance {
  red
  blue
}

Table frc_match_teams {
  match_key citext [not null]
  alliance frc_alliance [not null]
  station smallint [not null]
  team_num smallint [not null]
  is_surrogate boolean [not null]
  is_disqualified boolean [not null]

  indexes {
    (match_key, alliance, station) [pk]
    (team_num, match_key)
  }

  Note: 'A team competing in a match'
}
Ref: frc_match_teams.match_key > frc_matches.key [delete: cascade]
// Ref: frc_match_teams.team_num > frc_teams.number [delete: cascade]
// sometimes teams just don't exist

Table frc_match_results {
  match_key citext [not null]
  red_score smallint [not null]
  blue_score smallint [not null]
  winning_alliance frc_alliance
  videos jsonb[] [not null]
  score_breakdown jsonb

  indexes {
    match_key [pk]
  }

  Note: 'An official match result from the FMS'
}
Ref: frc_match_results.match_key > frc_matches.key [delete: cascade]

Table frc_event_rankings {
  event_key citext [not null]
  team_num smallint [not null]
  robot_id citext [not null]
  rank smallint [not null]

  indexes {
    (event_key, team_num, robot_id) // apparently not unique enough
    (team_num, event_key)
    (event_key, rank)
  }
}
