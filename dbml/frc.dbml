Table frc_seasons {
  year smallint [not null]
  name text [not null]
  team_count smallint [not null]
  last_modified timestamptz [not null]

  indexes {
    year [pk]
  }

  Note: 'A competition season with a unique game'
}

Table frc_districts {
  season smallint [not null]
  code citext [not null]
  name text [not null]
  last_modified timestamptz [not null]

  indexes {
    (season, code) [pk]
  }

  Note: 'A district designation for a particular season'
}
Ref: frc_districts.season > frc_seasons.year [delete: cascade]

Table frc_event_types {
  id citext [not null]
  name text [not null]
  frc_equivalents text[] [not null]

  indexes {
    id [pk]
  }

  Note: 'A type of competition event'
}

Table frc_events {
  season smallint [not null]
  code citext [not null]
  type frc_event_type [not null]
  name text [not null]
  venue text [not null]
  address text [not null]
  city text [not null]
  province text [not null]
  country text [not null]
  start_date date [not null]
  end_date date [not null]
  district_code citext
  website text
  last_modified timestamptz [not null]

  indexes {
    (season, code) [pk]
  }

  Note: 'An event or competition'
}
Ref: frc_events.season > frc_seasons.year [delete: cascade]
Ref: frc_events.(season, district_code) > frc_districts.(season, code) [delete: set null]

Table frc_teams {
  season smallint [not null]
  number smallint [not null]
  name text [not null]
  rookie_season smallint [not null]
  schools text[] [not null]
  sponsors text[] [not null]
  city text [not null]
  province text [not null]
  country text [not null]
  district_code citext
  website text
  last_modified timestamptz [not null]

  indexes {
    (season, number) [pk]
    (number, season) [unique]
  }

  Note: 'A team competing in a particular season'
}
Ref: frc_teams.season > frc_seasons.year [delete: cascade]
Ref: frc_teams.(season, district_code) > frc_districts.(season, code) [delete: set null]

Table frc_event_teams {
  season smallint [not null]
  event_code citext [not null]
  team_num smallint [not null]
  last_modified timestamptz [not null]

  indexes {
    (season, event_code, team_num) [pk]
    (team_num, season, event_code) [unique]
  }

  Note: 'A team competing in an event'
}
Ref: frc_event_teams.(season, event_code) > frc_events.(season, code) [delete: cascade]
Ref: frc_event_teams.(season, team_num) > frc_teams.(season, number) [delete: cascade]

Table frc_match_levels {
  id citext [not null]
  name citext [not null]

  indexes {
    id [pk]
    name [unique] // patch: include id
  }

  Note: 'A level of competition for matches'
}

Table frc_matches {
  // It's not practical to reference a 6-column pk from other tables
  // Solution: generate a concatenated pk
  key citext [not null] // patch: generated stored
  season smallint [not null]
  event_code citext [not null]
  level citext [not null]
  set smallint [not null]
  number smallint [not null]
  name text [not null]
  scheduled_time timestamp [not null] // api returns local time
  last_modified timestamptz [not null]

  indexes {
    key [pk]
    (season, event_code, level, set, number) [unique]
  }

  Note: 'A match at an event'
}
Ref: frc_matches.(season, event_code) > frc_events.(season, code) [delete: cascade]
Ref: frc_matches.level > frc_match_levels.id [delete: restrict]

Enum frc_alliance {
  red
  blue
}

Table frc_match_teams {
  match_key citext [not null]
  team_num smallint [not null]
  alliance frc_alliance [not null]
  last_modified timestamptz [not null]

  indexes {
    (match_key, team_num) [pk]
  }

  Note: 'A team competing in a match'
}
Ref: frc_match_teams.match_key > frc_matches.key [delete: cascade]
// Cannot create f_key to frc_teams without season, but that gets messy

Table frc_match_results {
  match_key citext [not null]
  red_score smallint [not null]
  blue_score smallint [not null]
  red_breakdown jsonb [not null]
  blue_breakdown jsonb [not null]
  actual_time timestamp [not null]
  video_url text
  last_modified timestamptz [not null]

  indexes {
    match_key [pk]
  }

  Note: 'The official results from the FMS for a match'
}
Ref: frc_match_results.match_key > frc_matches.key
