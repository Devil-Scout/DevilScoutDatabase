Enum data_type {
  boolean
  int
  text
}

Table categories {
  id citext [not null]
  has_match bool [not null]

  indexes {
    id [pk]
  }

  Note: 'A type of scouting data users can submit'
}

Table question_types {
  id citext [not null]
  name text [not null]
  type data_type

  indexes {
    id [pk]
  }

  Note: 'A type of scouting question shown to the user'
}

Table questions {
  id uuid [not null]
  parent_id uuid
  index smallint [not null]

  season smallint [not null]
  category citext [not null]
  type citext [not null]
  prompt text
  config jsonb
  info_path text

  indexes {
    id [pk]
    (season, category, id) [unique]
    (parent_id, index) [unique]
    category // for fk
  }
}
Ref: questions.parent_id > questions.id [delete: restrict]
Ref: questions.season > frc_seasons.year [delete: restrict]
Ref: questions.category > categories.id [delete: restrict]

Table submissions {
  id uuid [not null]
  category citext [not null]
  season smallint [not null]
  event_key citext [not null]
  match_key citext
  team_num smallint [not null]
  scouted_by uuid
  scouted_for smallint
  created_at timestamptz [not null]

  indexes {
    id [pk]
    season
    category
    event_key
    (match_key, team_num)
    team_num
    scouted_by
    scouted_for
  }

  Note: 'A scouting data submission'
}
Ref: submissions.category > categories.id [delete: restrict]
Ref: submissions.event_key > frc_events.key [delete: restrict]
Ref: submissions.match_key > frc_matches.key [delete: restrict]
Ref: submissions.season > frc_seasons.year [delete: restrict]
Ref: submissions.team_num > frc_teams.number [delete: restrict]
Ref: submissions.scouted_by > users.id [delete: set null]
Ref: submissions.scouted_for > teams.number [delete: set null]

Table submission_data {
  submission_id uuid [not null]
  question_id uuid [not null]
  value_bool boolean
  value_int bigint
  value_text text[]

  indexes {
    (submission_id, question_id) [pk]
    // for querying data (not allowed in dbml):
    // - (question_id, value_bool) WHERE value_bool IS NOT NULL
    // - (question_id, value_int) WHERE value_int IS NOT NULL
    // - (question_id, value_text) [type: gin] WHERE value_text IS NOT NULL
  }

  Note: 'A submission\'s scouting data'
}
Ref: submission_data.submission_id > submissions.id [delete: cascade]
Ref: submission_data.question_id > questions.id [delete: restrict]
