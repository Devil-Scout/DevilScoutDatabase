// Manually populated
Table frc_event_types {
  id smallint [not null]
  is_district boolean [not null]
  is_championship boolean [not null]
  is_division boolean [not null]
  is_offseason boolean [not null]
  name text [not null]
  name_short text [not null]

  indexes {
    id [pk]
  }
}

Table frc_events {
  season smallint [not null]
  type smallint [not null]
  start_date date [not null]
  end_date date [not null]
  coordinates point
  week smallint

  key citext [not null]
  code citext [not null]
  name text [not null]
  name_short text
  district_key citext

  timezone text
  country text
  province text
  city text
  address text
  location text

  website text
  postal_code citext

  indexes {
    key [pk]
    (season, code) [unique]
    (type, season)
    (start_date, end_date)
    district_key // for fk
    // key (gin, pg_trgm)
    // name (gin, pg_trgm)
  }
}
Ref: frc_events.season > frc_seasons.year [delete: cascade]
Ref: frc_events.type > frc_event_types.id [delete: restrict]
Ref: frc_events.district_key > frc_districts.key [delete: set null]

Table frc_event_teams {
  team_num smallint [not null]
  event_key citext [not null]
  pit_address text

  indexes {
    (event_key, team_num) [pk]
    (team_num, event_key) [unique] // filter by season using LIKE
  }
}
Ref: frc_event_teams.event_key > frc_events.key [delete: cascade]
Ref: frc_event_teams.team_num > frc_teams.number [delete: cascade]

Table frc_event_rankings {
  team_num smallint [not null]
  rank smallint [not null]
  event_key citext [not null]
  wins smallint [not null]
  losses smallint [not null]
  ties smallint [not null]

  indexes {
    (event_key, rank, team_num) [pk]
    (team_num, event_key)
  }
}
Ref: frc_event_rankings.(team_num, event_key) > frc_event_teams.(team_num, event_key) [delete: cascade]

Table frc_award_types {
  id smallint [not null]
  name text [not null]
  description text

  indexes {
    id [pk]
  }
}

Table frc_event_awards {
  type smallint [not null]
  team_num smallint
  event_key citext [not null]
  name text [not null]
  awardee text

  indexes {
    (team_num, event_key)
    event_key
  }
}
Ref: frc_event_awards.type > frc_award_types.id [delete: restrict]
Ref: frc_event_awards.event_key > frc_events.key [delete: cascade]
Ref: frc_event_awards.(team_num, event_key) > frc_event_teams.(team_num, event_key) [delete: cascade]

Table frc_event_alliances {
  team_num smallint [not null]
  alliance smallint [not null]
  pick_index smallint [not null]
  event_key citext [not null]

  indexes {
    (event_key, alliance, pick_index) [pk]
    (team_num, event_key) [unique]
  }
}
Ref: frc_event_alliances.(team_num, event_key) > frc_event_teams.(team_num, event_key) [delete: cascade]

Table frc_event_announcements {
  posted_time timestamptz [not null]
  is_resolved boolean [not null, default: false]
  event_key citext [not null]
  id text [not null]
  message text [not null]

  indexes {
    id [pk]
    (event_key, is_resolved)
  }
}
Ref: frc_event_announcements.event_key > frc_events.key [delete: cascade]
