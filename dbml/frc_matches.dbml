Enum frc_match_level {
  practice
  qualification
  playoff
  final
}

Enum frc_match_status {
  scheduled
  queuing
  on_deck
  on_field
  finished
}

Table frc_matches {
  number smallint [not null]
  is_replay boolean [not null, default: false]
  level frc_match_level [not null]
  status frc_match_status [not null]
  event_key citext [not null]
  key citext [not null]
  label text [not null]

  scheduled_time timestamptz
  queue_time timestamptz
  start_time timestamptz

  indexes {
    key [pk]
    (event_key, level, number, is_replay) [unique]
  }
}
Ref: frc_matches.event_key > frc_events.key [delete: cascade]

Enum frc_alliance_color {
  red
  blue
}

Table frc_match_teams {
  team_num smallint [not null]
  station smallint [not null]
  alliance frc_alliance_color [not null]
  is_surrogate boolean [not null]
  is_disqualified boolean [not null]
  match_key citext [not null]

  indexes {
    (match_key, alliance, station) [pk]
    (team_num, match_key)
  }
}
Ref: frc_match_teams.match_key > frc_matches.key [delete: cascade]
Ref: frc_match_teams.team_num > frc_teams.number [delete: cascade]

Table frc_match_results {
  red_score smallint [not null]
  blue_score smallint [not null]
  winner frc_alliance
  match_key citext [not null]
  score_breakdown jsonb

  indexes {
    match_key [pk]
  }
}
Ref: frc_match_results.match_key > frc_matches.key [delete: cascade]

Table frc_match_videos {
  match_key citext [not null]
  video_key text [not null]

  indexes {
    (match_key, video_key) [pk]
    video_key [unique]
  }
}
Ref: frc_match_videos.match_key > frc_matches.key [delete: cascade]
